# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-02 07:45
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('image', '0001_initial'),
        ('authentication', '0001_initial'),
        ('core', '0001_initial'),
        ('managementnode', '0001_initial'),
        ('provisioning', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blockcomputers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reloadrequestid', models.IntegerField()),
            ],
            options={
                'db_table': 'blockComputers',
            },
        ),
        migrations.CreateModel(
            name='Blockrequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('nummachines', models.IntegerField(db_column='numMachines')),
                ('repeating', models.CharField(max_length=7)),
                ('expiretime', models.DateTimeField(db_column='expireTime')),
                ('processing', models.IntegerField()),
                ('status', models.CharField(max_length=9)),
                ('comments', models.TextField(blank=True, null=True)),
                ('groupid', models.ForeignKey(blank=True, db_column='groupid', null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.Usergroup')),
                ('imageid', models.ForeignKey(db_column='imageid', on_delete=django.db.models.deletion.CASCADE, to='image.Image')),
                ('managementnodeid', models.ForeignKey(blank=True, db_column='managementnodeid', null=True, on_delete=django.db.models.deletion.CASCADE, to='managementnode.Managementnode')),
                ('ownerid', models.ForeignKey(db_column='ownerid', on_delete=django.db.models.deletion.CASCADE, to='authentication.User')),
            ],
            options={
                'db_table': 'blockRequest',
            },
        ),
        migrations.CreateModel(
            name='Blocktimes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('processed', models.IntegerField()),
                ('skip', models.IntegerField()),
                ('blockrequestid', models.ForeignKey(db_column='blockRequestid', on_delete=django.db.models.deletion.CASCADE, to='compute.Blockrequest')),
            ],
            options={
                'db_table': 'blockTimes',
            },
        ),
        migrations.CreateModel(
            name='Blockwebdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('days', models.IntegerField(blank=True, null=True)),
                ('weeknum', models.IntegerField(blank=True, null=True)),
                ('blockrequestid', models.ForeignKey(db_column='blockRequestid', on_delete=django.db.models.deletion.CASCADE, to='compute.Blockrequest')),
            ],
            options={
                'db_table': 'blockWebDate',
            },
        ),
        migrations.CreateModel(
            name='Blockwebtime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starthour', models.IntegerField()),
                ('startminute', models.IntegerField()),
                ('startmeridian', models.CharField(max_length=2)),
                ('endhour', models.IntegerField()),
                ('endminute', models.IntegerField()),
                ('endmeridian', models.CharField(max_length=2)),
                ('order', models.IntegerField()),
                ('blockrequestid', models.ForeignKey(db_column='blockRequestid', on_delete=django.db.models.deletion.CASCADE, to='compute.Blockrequest')),
            ],
            options={
                'db_table': 'blockWebTime',
            },
        ),
        migrations.CreateModel(
            name='Clickthroughs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted', models.DateTimeField()),
                ('agreement', models.TextField()),
                ('imageid', models.ForeignKey(db_column='imageid', on_delete=django.db.models.deletion.CASCADE, to='image.Image')),
                ('imagerevisionid', models.ForeignKey(blank=True, db_column='imagerevisionid', null=True, on_delete=django.db.models.deletion.CASCADE, to='image.Imagerevision')),
                ('userid', models.ForeignKey(db_column='userid', on_delete=django.db.models.deletion.CASCADE, to='authentication.User')),
            ],
            options={
                'db_table': 'clickThroughs',
            },
        ),
        migrations.CreateModel(
            name='Computer',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('ram', models.IntegerField(db_column='RAM')),
                ('procnumber', models.IntegerField()),
                ('procspeed', models.SmallIntegerField()),
                ('network', models.SmallIntegerField()),
                ('hostname', models.CharField(max_length=36)),
                ('ipaddress', models.CharField(db_column='IPaddress', max_length=15)),
                ('privateipaddress', models.CharField(blank=True, db_column='privateIPaddress', max_length=15, null=True)),
                ('eth0macaddress', models.CharField(blank=True, max_length=17, null=True)),
                ('eth1macaddress', models.CharField(blank=True, max_length=17, null=True)),
                ('type', models.CharField(max_length=14)),
                ('drivetype', models.CharField(max_length=4)),
                ('deleted', models.IntegerField()),
                ('datedeleted', models.DateTimeField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('lastcheck', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('dsa', models.TextField(blank=True, null=True)),
                ('dsapub', models.TextField(blank=True, null=True)),
                ('rsa', models.TextField(blank=True, null=True)),
                ('rsapub', models.TextField(blank=True, null=True)),
                ('host', models.TextField(blank=True, null=True)),
                ('hostpub', models.TextField(blank=True, null=True)),
                ('vmtypeid', models.IntegerField(blank=True, null=True)),
                ('currentimageid', models.ForeignKey(db_column='currentimageid', on_delete=django.db.models.deletion.CASCADE, related_name='rel_currentimageid', to='image.Image')),
                ('imagerevisionid', models.ForeignKey(db_column='imagerevisionid', on_delete=django.db.models.deletion.CASCADE, to='image.Imagerevision')),
                ('nextimageid', models.ForeignKey(db_column='nextimageid', on_delete=django.db.models.deletion.CASCADE, related_name='rel_nextimageid', to='image.Image')),
                ('ownerid', models.ForeignKey(blank=True, db_column='ownerid', null=True, on_delete=django.db.models.deletion.CASCADE, to='authentication.User')),
                ('platformid', models.ForeignKey(db_column='platformid', on_delete=django.db.models.deletion.CASCADE, to='core.Platform')),
                ('predictivemoduleid', models.ForeignKey(db_column='predictivemoduleid', on_delete=django.db.models.deletion.CASCADE, to='core.Module')),
                ('provisioningid', models.ForeignKey(db_column='provisioningid', on_delete=django.db.models.deletion.CASCADE, to='provisioning.Provisioning')),
            ],
            options={
                'db_table': 'computer',
            },
        ),
        migrations.CreateModel(
            name='Computerloadflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=14, null=True)),
            ],
            options={
                'db_table': 'computerloadflow',
            },
        ),
        migrations.CreateModel(
            name='Computerloadstate',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('loadstatename', models.CharField(max_length=24, unique=True)),
                ('prettyname', models.CharField(blank=True, max_length=50, null=True)),
                ('est', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'computerloadstate',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True)),
                ('ownerid', models.ForeignKey(db_column='ownerid', on_delete=django.db.models.deletion.CASCADE, to='authentication.User')),
            ],
            options={
                'db_table': 'schedule',
            },
        ),
        migrations.CreateModel(
            name='Scheduletimes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.SmallIntegerField()),
                ('end', models.SmallIntegerField()),
                ('scheduleid', models.ForeignKey(db_column='scheduleid', on_delete=django.db.models.deletion.CASCADE, to='compute.Schedule')),
            ],
            options={
                'db_table': 'scheduletimes',
            },
        ),
        migrations.CreateModel(
            name='Semaphore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expires', models.DateTimeField()),
                ('procid', models.CharField(max_length=255)),
                ('computerid', models.ForeignKey(db_column='computerid', on_delete=django.db.models.deletion.CASCADE, to='compute.Computer')),
                ('imageid', models.ForeignKey(db_column='imageid', on_delete=django.db.models.deletion.CASCADE, to='image.Image')),
                ('imagerevisionid', models.ForeignKey(db_column='imagerevisionid', on_delete=django.db.models.deletion.CASCADE, to='image.Imagerevision')),
                ('managementnodeid', models.ForeignKey(db_column='managementnodeid', on_delete=django.db.models.deletion.CASCADE, to='managementnode.Managementnode')),
            ],
            options={
                'db_table': 'semaphore',
            },
        ),
        migrations.CreateModel(
            name='Serverprofile',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('ending', models.CharField(max_length=10)),
                ('fixedip', models.CharField(blank=True, db_column='fixedIP', max_length=15, null=True)),
                ('fixedmac', models.CharField(blank=True, db_column='fixedMAC', max_length=17, null=True)),
                ('monitored', models.IntegerField()),
                ('admingroupid', models.ForeignKey(blank=True, db_column='admingroupid', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agi', to='authentication.Usergroup')),
                ('imageid', models.ForeignKey(db_column='imageid', on_delete=django.db.models.deletion.CASCADE, to='image.Image')),
                ('logingroupid', models.ForeignKey(blank=True, db_column='logingroupid', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lalog', to='authentication.Usergroup')),
                ('ownerid', models.ForeignKey(db_column='ownerid', on_delete=django.db.models.deletion.CASCADE, to='authentication.User')),
            ],
            options={
                'db_table': 'serverprofile',
            },
        ),
        migrations.CreateModel(
            name='Vmhost',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('vmlimit', models.IntegerField()),
                ('computerid', models.OneToOneField(db_column='computerid', on_delete=django.db.models.deletion.CASCADE, to='compute.Computer')),
            ],
            options={
                'db_table': 'vmhost',
            },
        ),
        migrations.CreateModel(
            name='Vmprofile',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('profilename', models.CharField(max_length=56, unique=True)),
                ('resourcepath', models.CharField(blank=True, max_length=256, null=True)),
                ('folderpath', models.CharField(blank=True, max_length=256, null=True)),
                ('repositorypath', models.CharField(blank=True, max_length=128, null=True)),
                ('datastorepath', models.CharField(max_length=128)),
                ('vmpath', models.CharField(blank=True, max_length=128, null=True)),
                ('virtualswitch0', models.CharField(max_length=80)),
                ('virtualswitch1', models.CharField(max_length=80)),
                ('virtualswitch2', models.CharField(blank=True, max_length=80, null=True)),
                ('virtualswitch3', models.CharField(blank=True, max_length=80, null=True)),
                ('vmdisk', models.CharField(max_length=9)),
                ('username', models.CharField(blank=True, max_length=80, null=True)),
                ('password', models.CharField(blank=True, max_length=256, null=True)),
                ('eth0generated', models.IntegerField()),
                ('eth1generated', models.IntegerField()),
                ('rsapub', models.TextField(blank=True, null=True)),
                ('rsakey', models.CharField(blank=True, max_length=256, null=True)),
                ('encryptedpasswd', models.TextField(blank=True, null=True)),
                ('datastoreimagetypeid', models.ForeignKey(db_column='datastoreimagetypeid', on_delete=django.db.models.deletion.CASCADE, related_name='IR3', to='image.Imagetype')),
                ('imageid', models.ForeignKey(db_column='imageid', on_delete=django.db.models.deletion.CASCADE, to='image.Image')),
                ('repositoryimagetypeid', models.ForeignKey(db_column='repositoryimagetypeid', on_delete=django.db.models.deletion.CASCADE, related_name='IR1', to='image.Imagetype')),
            ],
            options={
                'db_table': 'vmprofile',
            },
        ),
        migrations.AddField(
            model_name='vmhost',
            name='vmprofileid',
            field=models.ForeignKey(db_column='vmprofileid', on_delete=django.db.models.deletion.CASCADE, to='compute.Vmprofile'),
        ),
        migrations.AddField(
            model_name='computerloadflow',
            name='computerloadstateid',
            field=models.ForeignKey(db_column='computerloadstateid', on_delete=django.db.models.deletion.CASCADE, related_name='clsi', to='compute.Computerloadstate'),
        ),
        migrations.AddField(
            model_name='computerloadflow',
            name='nextstateid',
            field=models.ForeignKey(blank=True, db_column='nextstateid', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nsi', to='compute.Computerloadstate'),
        ),
        migrations.AddField(
            model_name='computer',
            name='scheduleid',
            field=models.ForeignKey(blank=True, db_column='scheduleid', null=True, on_delete=django.db.models.deletion.CASCADE, to='compute.Schedule'),
        ),
        migrations.AddField(
            model_name='computer',
            name='stateid',
            field=models.ForeignKey(db_column='stateid', on_delete=django.db.models.deletion.CASCADE, to='core.State'),
        ),
        migrations.AddField(
            model_name='computer',
            name='vmhostid',
            field=models.ForeignKey(blank=True, db_column='vmhostid', null=True, on_delete=django.db.models.deletion.CASCADE, to='compute.Vmhost'),
        ),
        migrations.AddField(
            model_name='blockcomputers',
            name='blocktimeid',
            field=models.ForeignKey(db_column='blockTimeid', on_delete=django.db.models.deletion.CASCADE, to='compute.Blocktimes'),
        ),
        migrations.AddField(
            model_name='blockcomputers',
            name='computerid',
            field=models.ForeignKey(db_column='computerid', on_delete=django.db.models.deletion.CASCADE, to='compute.Computer'),
        ),
        migrations.AddField(
            model_name='blockcomputers',
            name='imageid',
            field=models.ForeignKey(db_column='imageid', on_delete=django.db.models.deletion.CASCADE, to='image.Image'),
        ),
        migrations.AlterUniqueTogether(
            name='computer',
            unique_together=set([('eth1macaddress', 'datedeleted'), ('hostname', 'datedeleted'), ('eth0macaddress', 'datedeleted')]),
        ),
        migrations.AlterUniqueTogether(
            name='blockcomputers',
            unique_together=set([('blocktimeid', 'computerid')]),
        ),
    ]
